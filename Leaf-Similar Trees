//https://leetcode.com/problems/leaf-similar-trees/
class Solution {
public:
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        func1(root1);
        func2(root2);
        if(func1(root1)==func2(root2)){
            return true;
        }
        else{
            return false;
        }
    }
    vector<int>v1;
    vector<int> func1(TreeNode* root1){
         if(root1==NULL){
             return vector<int>();
         }
         if(root1->left==NULL and root1->right==NULL){
             v1.push_back(root1->val);
         }
         if(root1!=NULL){
            func1(root1->left);
            func1(root1->right);
         }
         return v1;
    }
    vector<int>v2;
    vector<int> func2(TreeNode* root2){
         if(root2==NULL){
             return vector<int>();
         }
         if(root2->left==NULL and root2->right==NULL){
             v2.push_back(root2->val);
         }
         if(root2!=NULL){
            func2(root2->left);
            func2(root2->right);
         }
         return v2;
    }
};
